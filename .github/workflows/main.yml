name: pyxis kernel builder linaro

on:
  push:
  workflow_dispatch:
jobs:
  super-job:
      runs-on: ubuntu-20.04
      steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y flex bison ncurses-dev texinfo gcc gperf patch libtool automake g++ libncurses5-dev gawk subversion expat libexpat1-dev python-all-dev binutils-dev bc libcap-dev autoconf libgmp-dev build-essential pkg-config libmpc-dev libmpfr-dev autopoint gettext txt2man liblzma-dev libssl-dev libz-dev mercurial wget tar gcc-10 g++-10 cmake zstd ninja-build lz4 liblz4-tool liblz4-dev lzma linux-libc-dev-armhf-cross linux-libc-dev-amd64-cross libpurelibc1 libpurelibc-dev linux-libc-dev-arm64-cross 
          sudo apt install -y gcc g++ python make texinfo texlive bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev unzip --fix-broken --fix-missing
          sudo apt install -y --no-install-recommends git make bc bison openssl curl zip kmod cpio flex libelf-dev libssl-dev libtfm-dev wget device-tree-compiler ca-certificates python3 python2 binutils-dev bison build-essential ca-certificates ccache clang cmake curl file flex git libelf-dev libssl-dev lld make ninja-build python3-dev texinfo u-boot-tools xz-utils zlib1g-dev
      - name: Set build date
        id: get-date
        run: |
          sudo timedatectl set-timezone Asia/Jakarta
          echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
      - name: Build & Push
        run: |
          git config --global user.name "${GITHUB_USER}"
          git config --global user.email "${GITHUB_EMAIL}"
          source env.sh
          echo "Cloning kernel"
          git clone --depth=1 $KERNEL_REPO -b $KERNEL_BRANCH kernel && cd kernel
          mv /home/runner/work/lazy/lazy/build.sh /home/runner/work/lazy/lazy/kernel
          source build.sh
        env:
          GITHUB_EMAIL: ${{ secrets.EMAIL }}
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_USER: ${{ secrets.USERNAME }}
          TG_CHAT_ID: ${{ secrets.CHAT_ID }}
          TG_TOKEN: ${{ secrets.TOKEN }}
      - uses: yanzay/notify-telegram@v0.1.0
        if: always()
        with:
          chat: ${{ secrets.CHAT_ID }} # user id or channel name secret
          token: ${{ secrets.TOKEN }} # token secret
          status: ${{ job.status }} # do not modify this line
